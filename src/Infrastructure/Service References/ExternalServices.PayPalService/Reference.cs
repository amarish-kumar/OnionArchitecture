//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infrastructure.ExternalServices.PayPalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditCard", Namespace="http://schemas.datacontract.org/2004/07/PayPalServices")]
    [System.SerializableAttribute()]
    public partial class CreditCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CardExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CardExpiration {
            get {
                return this.CardExpirationField;
            }
            set {
                if ((this.CardExpirationField.Equals(value) != true)) {
                    this.CardExpirationField = value;
                    this.RaisePropertyChanged("CardExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardValidationResult", Namespace="http://schemas.datacontract.org/2004/07/PayPalServices")]
    public enum CardValidationResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Valid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidCardNumber = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MissingCvv2Code = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExternalServices.PayPalService.PayPalService")]
    public interface PayPalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PayPalService/ValidateCreditCard", ReplyAction="http://tempuri.org/PayPalService/ValidateCreditCardResponse")]
        Infrastructure.ExternalServices.PayPalService.CardValidationResult ValidateCreditCard(Infrastructure.ExternalServices.PayPalService.CreditCard card);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PayPalService/VerifyAvailableFunds", ReplyAction="http://tempuri.org/PayPalService/VerifyAvailableFundsResponse")]
        bool VerifyAvailableFunds(Infrastructure.ExternalServices.PayPalService.CreditCard card, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PayPalService/ChargeAccount", ReplyAction="http://tempuri.org/PayPalService/ChargeAccountResponse")]
        bool ChargeAccount(Infrastructure.ExternalServices.PayPalService.CreditCard card, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PayPalService/SubmitFraudRequest", ReplyAction="http://tempuri.org/PayPalService/SubmitFraudRequestResponse")]
        bool SubmitFraudRequest(Infrastructure.ExternalServices.PayPalService.CreditCard card);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PayPalService/IsCardHighRisk", ReplyAction="http://tempuri.org/PayPalService/IsCardHighRiskResponse")]
        bool IsCardHighRisk(Infrastructure.ExternalServices.PayPalService.CreditCard card);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PayPalService/BillToAlternatePayPalAddress", ReplyAction="http://tempuri.org/PayPalService/BillToAlternatePayPalAddressResponse")]
        bool BillToAlternatePayPalAddress(Infrastructure.ExternalServices.PayPalService.CreditCard card, decimal amount, string address);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PayPalServiceChannel : Infrastructure.ExternalServices.PayPalService.PayPalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayPalServiceClient : System.ServiceModel.ClientBase<Infrastructure.ExternalServices.PayPalService.PayPalService>, Infrastructure.ExternalServices.PayPalService.PayPalService {
        
        public PayPalServiceClient() {
        }
        
        public PayPalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayPalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayPalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayPalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Infrastructure.ExternalServices.PayPalService.CardValidationResult ValidateCreditCard(Infrastructure.ExternalServices.PayPalService.CreditCard card) {
            return base.Channel.ValidateCreditCard(card);
        }
        
        public bool VerifyAvailableFunds(Infrastructure.ExternalServices.PayPalService.CreditCard card, decimal amount) {
            return base.Channel.VerifyAvailableFunds(card, amount);
        }
        
        public bool ChargeAccount(Infrastructure.ExternalServices.PayPalService.CreditCard card, decimal amount) {
            return base.Channel.ChargeAccount(card, amount);
        }
        
        public bool SubmitFraudRequest(Infrastructure.ExternalServices.PayPalService.CreditCard card) {
            return base.Channel.SubmitFraudRequest(card);
        }
        
        public bool IsCardHighRisk(Infrastructure.ExternalServices.PayPalService.CreditCard card) {
            return base.Channel.IsCardHighRisk(card);
        }
        
        public bool BillToAlternatePayPalAddress(Infrastructure.ExternalServices.PayPalService.CreditCard card, decimal amount, string address) {
            return base.Channel.BillToAlternatePayPalAddress(card, amount, address);
        }
    }
}
